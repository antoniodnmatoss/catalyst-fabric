## -- Declare variables to be passed into your templates.

# -- address where application will be hosted. All created nodes (peers, orderers, cas) will have <NodeName>.<domainName> address
domainName: ""
logs:
  level: info
# -- auth config
auth:
  # -- enabled auth for api/v1 endpoints
  enabled: true
  # -- secret for signing JWT
  secretKey: ""
  # -- available methods are: 'basic', 'openid', 'cloud-console'
  method: basic
  # -- BasicAuth
  basic:
    ## -- BasicAuth username
    username: ""
    ## -- BasicAuth password
    password: ""
  # -- OpenID authorization mechanism
  openid:
    ## --OpenID provider endpoint for obtaining access token
    url: ""
    ## -- OpenID configuration is a Well-known URI Discovery Mechanism
    wellKnownURL: ""
    ## - OpenID client ID
    clientID: ""
    # # - OpenID client secret
    # clientSecret: ""
# -- this module enabled integration with prometheus-operator. Fetches metrics from all the peers, orderers and CAs in the system
monitoring:
  # -- specify whether to create monitoring resources
  # prometheus operator and grafana need to be installed beforehand
  enabled: false
  # -- configuration for ServiceMonitor resource
  serviceMonitor:
    # -- how often to pull metrics from resources
    interval: 15s
  grafana:
    # -- grafana default admin username and email. Grafana is authenticated through default API authentication automatically.
    user: admin
    email: admin@domain.com
    # -- grafana service and port for ingress
    service:
      name: grafana
      namespace: monitoring
      port: 80
# -- Route for Openshift Controller
openshiftRoute:
  enabled: false
  # -- it requires raw certificate here
  certificate: ""
  # -- best ee solution requires raw private key here
  key: ""
# -- Route for Istio Controller
istioRoute:
  enabled: false
  # -- Istio gateway name
  gateway: ""
  # -- match port for tls config
  port: 443
# -- IngressRoute for Traefik Ingress Controller
ingressConfig:
  # -- specify whether to create IngresRoute resource
  enabled: false
  tls:
    enabled: false
    # -- Certificate and Issuer will be created with Cert-Manager. Names will be autogenerated.
    # if `certManager.enabled` `ingressConfig.tls.secretName` will be ignored
    certManager:
      enabled: false
      email: "example@intellecteu.com"
      server: "https://acme-staging-v02.api.letsencrypt.org/directory"
    # -- secret name with own tls certificate to use with ingress
    secretName: ""
    tlsStore:
      enabled: false
rbac:
  # -- Whether to create RBAC Resourses (Role, SA, RoleBinding)
  enabled: true
  # -- Service Account Name to use for api, ui, operator, consumer
  serviceAccountName: fabric-console
# operator component values
operator:
  # -- number of operator pods to run
  replicaCount: 1
  # -- operator image settings
  image:
    repository: registry.gitlab.com/intellecteu/products/catalyst/cat-bp/fabric/fabric-console
    pullPolicy: Always
    tag: "latest"
  # -- operator image pull secrets
  imagePullSecrets:
    - name: intellecteu-gitlab-access
  # -- annotations for operator pods
  podAnnotations: {}
  # -- security context on a pod level
  podSecurityContext: {}
  # -- security context on a container level
  securityContext: {}
  # -- CPU and Memory requests and limits
  resources:
    limits:
      cpu: "150m"
      memory: "300Mi"
    requests:
      cpu: "100m"
      memory: "100Mi"
  # -- Specify Node Labels to place operator pods on
  nodeSelector: {}
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  affinity: {}
## api component values
api:
  # -- api autoscaling settings
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  # -- number of api pods to run
  replicaCount: 1
  # -- api image settings
  image:
    repository: registry.gitlab.com/intellecteu/products/catalyst/cat-bp/fabric/fabric-console
    pullPolicy: Always
    tag: "v0.1.1"
  # -- api image pull secrets
  imagePullSecrets:
    - name: intellecteu-gitlab-access
  # -- api service port and name
  service:
    port: 8000
    portName: http
  # -- annotations for api pods
  podAnnotations: {}
  # -- securtiry context on a pod level
  podSecurityContext: {}
  # -- security context on a container level
  securityContext: {}
  # -- CPU and Memory requests and limits
  resources:
    limits:
      cpu: "150m"
      memory: "500Mi"
    requests:
      cpu: "100m"
      memory: "200Mi"
  # -- Specify Node Labels to place api pods on
  nodeSelector: {}
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  affinity: {}
consumer:
  # -- number of consumer pods to run
  replicaCount: 1
  # -- consumer image settings
  image:
    repository: registry.gitlab.com/intellecteu/products/catalyst/cat-bp/fabric/fabric-console
    pullPolicy: Always
    tag: "v0.1.1"
  # -- consumer image pull secrets
  imagePullSecrets:
    - name: intellecteu-gitlab-access
  # -- consumer service port and name
  service:
    port: 8050
    portName: http
  # -- annotations for consumer pods
  podAnnotations: {}
  # -- security context on a pod level
  podSecurityContext: {}
  # -- security context on a container level
  securityContext: {}
  # -- CPU and Memory requests and limits
  resources:
    limits:
      cpu: "150m"
      memory: "500Mi"
    requests:
      cpu: "100m"
      memory: "200Mi"
  # -- Specify Node Labels to place consumer pods on
  nodeSelector: {}
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  affinity: {}
ui:
  # -- number of ui pods to run
  replicaCount: 1
  # -- ui image settings
  image:
    repository: registry.gitlab.com/intellecteu/products/catalyst/cat-bp/fabric/fabric-console-ui
    pullPolicy: Always
    tag: "v0.1.1"
  # -- api image pull secrets
  imagePullSecrets:
    - name: intellecteu-gitlab-access
  # -- ui service port and name
  service:
    port: 3001
    portName: http
  # -- annotations for consumer pods
  podAnnotations: {}
  # -- security context on a pod level
  podSecurityContext: {}
  # -- security context on a container level
  securityContext: {}
  # -- CPU and Memory requests and limits
  resources:
    limits:
      cpu: "100m"
      memory: "100Mi"
    requests:
      cpu: "30m"
      memory: "50Mi"
  # -- Specify Node Labels to place ui pods on
  nodeSelector: {}
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: []
  # -- https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  affinity: {}
# -- Rabbitmq bitnami chart settings
# https://github.com/bitnami/charts/tree/master/bitnami/rabbitmq
rabbitmq:
  fullnameOverride: rabbitmq
  resources:
    limits:
      cpu: "500m"
      memory: "512Mi"
  image:
    tag: 3.8.8
  auth:
    username: intellecteu
    password: catbp
    erlangCookie: j3k12j#$#k1k322kkvvvv
  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
# -- Postgresql bitnami chart settings
# https://github.com/bitnami/charts/tree/master/bitnami/postgresql
postgresql:
  fullnameOverride: postgresql
  postgresqlPostgresPassword: LEExdBeFyH5quyaIkDt!qK8h?4LRKOjnctuJKu6AwN
  postgresqlUsername: fabric_console
  postgresqlPassword: lL6GsAnLP1XgqRGnjyI7JmBPm5IMD0vQaNwH89Sk
  postgresqlDatabase: fabric_db
  resources:
    limits:
      cpu: "300m"
      memory: "384Mi"
    requests:
      cpu: "200m"
      memory: "256Mi"
  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce
# -- Whether to install dependent charts
dependencies:
  rabbitmq: true
  mysql: false
  postgresql: true
  rabbitmq_ext: false
  mysql_ext: false
  postgresql_ext: false
# -- Configuration for external services
#externalServices:
#  rabbitmq:
#    ipAddress: 192.168.0.1
#    port: 5672
#    username: username
#    password: password
#  mysql:
#    ipAddress: 192.168.0.2
#    port: 3306
#    username: username
#    password: password
#    database: database

# Init contaner
initContainer:
  checkimage: registry.gitlab.com/intellecteu/products/catalyst/cat-bp/infrastructure/images/busybox:latest
